{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\ReactJS\\\\thefoodhouse\\\\src\\\\Components\\\\ItemDetail.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemDetail() {\n  _s();\n  const [item, setItem] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const promesa = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(fetch(`https://dummyjson.com/products/${id}`));\n      }, 300);\n    });\n    promesa.then(resolve => resolve.json()).then(data => {\n      setItem(data.products);\n    });\n  }, [id]); // <-- dependency array should be placed here\n\n  console.log(item);\n  console.log(id);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"18rem\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(ItemDetail, \"r7HBCLhr7dtY0poBR+ZN2+6NK2Q=\", false, function () {\n  return [useParams];\n});\n_c = ItemDetail;\nexport default ItemDetail;\nvar _c;\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Card","Button","jsxDEV","_jsxDEV","ItemDetail","_s","item","setItem","id","promesa","Promise","resolve","setTimeout","fetch","then","json","data","products","console","log","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kevin/Desktop/ReactJS/thefoodhouse/src/Components/ItemDetail.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nfunction ItemDetail() {\r\n    const [item, setItem] = useState([]);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        const promesa = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(fetch(`https://dummyjson.com/products/${id}`));\r\n            }, 300);\r\n        });\r\n\r\n        promesa\r\n            .then((resolve) => resolve.json())\r\n            .then((data) => {\r\n                setItem(data.products);\r\n            });\r\n    }, [id]); // <-- dependency array should be placed here\r\n\r\n    console.log(item);\r\n    console.log(id);\r\n\r\n    return (\r\n        <Card style={{ width: \"18rem\" }}>\r\n            {/* <Card.Img variant=\"top\" src={item.images[0]} />\r\n              <Card.Body>\r\n                  <Card.Title>{item.title}</Card.Title>\r\n                  <Card.Text>\r\n                      {item.description}\r\n                  </Card.Text>\r\n                  <Button variant=\"primary\">Add To Cart</Button>\r\n              </Card.Body> */}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ItemDetail;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEU;EAAG,CAAC,GAAGT,SAAS,EAAE;EAE1BF,SAAS,CAAC,MAAM;IACZ,MAAMY,OAAO,GAAG,IAAIC,OAAO,CAAEC,OAAO,IAAK;MACrCC,UAAU,CAAC,MAAM;QACbD,OAAO,CAACE,KAAK,CAAE,kCAAiCL,EAAG,EAAC,CAAC,CAAC;MAC1D,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC;IAEFC,OAAO,CACFK,IAAI,CAAEH,OAAO,IAAKA,OAAO,CAACI,IAAI,EAAE,CAAC,CACjCD,IAAI,CAAEE,IAAI,IAAK;MACZT,OAAO,CAACS,IAAI,CAACC,QAAQ,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEVU,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC;EACjBY,OAAO,CAACC,GAAG,CAACX,EAAE,CAAC;EAEf,oBACIL,OAAA,CAACH,IAAI;IAACoB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QASzB;AAEf;AAACpB,EAAA,CAjCQD,UAAU;EAAA,QAEAL,SAAS;AAAA;AAAA2B,EAAA,GAFnBtB,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}